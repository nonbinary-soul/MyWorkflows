@"http://www.eclipse.org/OCL/Import"(ecore="http://www.eclipse.org/emf/2002/Ecore")
@Ecore(invocationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot", settingDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot", validationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot")
@namespace(uri="http://www.example.org/proyectomm", prefix="proyectomm")
@GenModel(operationReflection="true",tableProviders="true",complianceLevel="6.0")
@gmf
package proyectomm;

@Ecore(constraints="R01_unaTareaInicial R02_unaTareaFinal")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(R01_unaTareaInicial="Inicio.allInstances()->size() = 1", R02_unaTareaFinal="Fin.allInstances()->size() = 1")
@gmf.diagram
class ProcesoDeNegocio {	
	val BaseDeDatos[+] bases_de_datos;
	val Actor[+] actores;
	attr String[1] nombre;
}

@Ecore(constraints="R05_minTareaIntermedia")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(R05_minTareaIntermedia="tareas->select(oclIsKindOf(Intermedia))->size() > 0")
@gmf.node(label="nombre", figure="rectangle", color="253,254,230")
class Actor {
	attr String[1] nombre;
	@gmf.compartment
	val Tarea[*] tareas;
	@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(derivation="self.tareas->size()")
	volatile transient derived attr int[1] num_tareas;
}

@gmf.node(label="nombre", figure="rectangle", color="230,255,208")
class BaseDeDatos {
	attr String[1] nombre;
	@gmf.compartment
	val Tabla[+] tablas;
}

@Ecore(constraints="P02_soloUnaClavePrimaria P07_soloUnaClaveForanea")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(P02_soloUnaClavePrimaria="self.atributos->select(a | a.oclIsTypeOf(PrimaryKey))->size() <= 1", P07_soloUnaClaveForanea="self.atributos->select(a | a.oclIsTypeOf(ForeignKey))->size() <= 1")
@gmf.node(label="nombre", figure="rectangle")
class Tabla {
	attr String[1] nombre;
	@gmf.compartment
	val Atributo[+] atributos;
}

@Ecore(constraints="P01_tieneOpciones P04_sinEspaciosEnBlanco")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(P01_tieneOpciones="if self.tipo = EAtributo::LIST then self.opciones->notEmpty() else self.opciones->isEmpty() endif", P04_sinEspaciosEnBlanco="not self.nombre->includes(' ')")
@gmf.node(label="nombre, tipo", figure="rectangle", label.pattern="{0}:{1}")
class Atributo {
	attr String[1] nombre;
	attr EAtributo[1] tipo;
	@gmf.compartment
	val Opcion[*] opciones;
}

enum EAtributo {
	INTEGER = 0;
	REAL = 0;
	TEXT = 0;
	BOOLEAN = 3;
	LIST = 4;
	DATE = 5;
}

@Ecore(constraints="R06_noReflexiva R08_ConexionesEntreTareas R09_unidireccionalidad")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(R06_noReflexiva="sucesor <> self", R08_ConexionesEntreTareas="
		  if self.oclIsTypeOf(Envio) then
		    -- Se evalua que Envio y Recepcion sean de distinto actor
		    self.oclContainer() <> self.sucesor.oclContainer() 
		  else
		    -- El resto de conexiones deben ser del mismo actor
		    self.sucesor->isEmpty() or
		    self.sucesor.oclContainer() = self.oclContainer()
		  endif", R09_unidireccionalidad="
		self.predecesor->size() <= 1 and self.sucesor->size() <= 1")

abstract class Tarea {
	attr String nombre;
	@gmf.link(color="0,0,0", source="predecesor", target="sucessor", target.decoration="filledclosedarrow", style="solid", width="1")
	ref Tarea#predecesor sucesor;
	ref Tarea#sucesor predecesor;
}

@Ecore(constraints="R03_sinPredecesor")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(R03_sinPredecesor="predecesor = null")
@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/start.svg", label.icon="false", label.placement="none")
class Inicio extends Tarea {
}

@Ecore(constraints="R04_sinSucesor")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(R04_sinSucesor="sucesor = null")
@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/finish.svg", label.icon="false", label.placement="none")
class Fin extends Tarea {
}

abstract class Intermedia extends Tarea {
	id attr int[1] ~id;
	attr String descripcion;
}

@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/form.svg", label.icon="false", label.placement="external")
class Usuario extends Intermedia {
	@gmf.link(color="0,0,0", target.decoration="filledclosedarrow", style="dash", width="2")
	ref Tabla[1] tabla_accedida;
}

@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/service.svg", label.icon="false", label.placement="external")
class Servicio extends Intermedia {
	@gmf.link(color="0,0,0", target.decoration="filledclosedarrow", style="dash", width="2")
	ref Tabla[1] tabla_accedida;
}

abstract class Mensaje extends Intermedia {
	@gmf.link(color="0,0,0", label="Acceso a la tabla...", target.decoration="filledclosedarrow", style="dash", width="2")
	ref Tabla[1] tabla_accedida;
}

@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/send-message.svg", label.icon="false", label.placement="external")
class Envio extends Mensaje {
}

@Ecore(constraints="R07_envioAsociado P05_mismaTablaQueEnvio")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(R07_envioAsociado="predecesor.oclIsTypeOf(Envio)", P05_mismaTablaQueEnvio="self.tabla_accedida = self.predecesor.oclAsType(Envio).tabla_accedida")
@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/received-message.svg", label.icon="false", label.placement="external")
class Recepcion extends Mensaje {
}

@Ecore(constraints="P03_borradoConClavePrimaria")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(P03_borradoConClavePrimaria="
		        self.atributo_seleccionado.oclIsTypeOf(PrimaryKey)")
@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/delete.svg", label.icon="false", label.placement="external")
class Borrado extends BD {
}

@gmf.node(label="nombre", figure="svg", svg.uri="platform:/plugin/proyecto/icons/read.svg", label.icon="false", label.placement="external")
class Lectura extends BD {
	@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(derivation="self.atributo_seleccionado.oclContainer().oclAsType(Tabla)")
	volatile transient derived ref Tabla[1] datos_a_leer;
}

abstract class BD extends Intermedia {
	@gmf.link(color="0,0,0", label="Acceso al atributo...", target.decoration="filledclosedarrow", style="dash", width="2")
	ref Atributo[1] atributo_seleccionado;
}

class PrimaryKey extends Atributo {
}

@Ecore(constraints="P06_mismoTipoQuePK")
@"http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"(P06_mismoTipoQuePK="self.tipo = self.referencia_a.tipo")
class ForeignKey extends Atributo {
	@gmf.link(color="0,0,0", label="Referencia a...", target.decoration="filledclosedarrow", style="dash", width="2")
	ref PrimaryKey[1] referencia_a;
}

@gmf.node(label="nombre", figure="rectangle")
class Opcion {
	attr String[1] nombre;
}

