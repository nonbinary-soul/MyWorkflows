[comment encoding = UTF-8 /]
[module generate('http://www.example.org/proyectomm')]

[template public generateWorkflow(workflow: ProcesoDeNegocio)]
[comment @main/]
[comment Generación de las bases de datos/]
	[for (database: BaseDeDatos | workflow.bases_de_datos)]
		[database.generate()/]
	[/for]
[comment Generación de los actores/]
	[for (actor: Actor | workflow.actores)]
		[actor.generate()/]
	[/for]
[/template]

[comment
	
	GENERACIÓN DEL CÓDIGO SQL: BASES DE DATOS	

/]
[template public generate(database: BaseDeDatos)]
[file ('/database/' + database.nombre + '.sql', false, 'UTF-8')]

-- Creación de la base de datos
CREATE DATABASE IF NOT EXISTS [database.nombre/];

-- Cambio al contexto de la base de datos
USE [database.nombre/];

-- Creación de tablas
[for (tabla: Tabla | database.tablas)]
[tabla.generate()/]
[/for]

[/file]
[/template]

[template public generate(table: Tabla)]
-- Definición de la tabla [table.nombre/]
CREATE TABLE IF NOT EXISTS [table.nombre/] (
[for (atributo : Atributo | table.atributos)]
	[comment 
		No se usa separator porque se añade sí o sí un salto de línea y en esa línea en donde se pone el separator. 
		Por ejemplo: 
		dni TEXT
		, nombre TEXT
		Además, se emplea trim() para eliminar los espacios en blanco finales e iniciales de forma que quede en una sola línea: 
		dni TEXT, 
		nombre TEXT
	/]
	[atributo.generate().trim()/][if (not(atributo = table.atributos->last()))], [/if]
[/for]
);

[/template]

[template public generate(atributo: Atributo)]
[atributo.nombre/] [atributo.tipo.getTipo().trim()/]
[/template]

[template public generate(atributo: PrimaryKey)]
[atributo.nombre/] [atributo.tipo.getTipo().trim()/] PRIMARY KEY AUTOINCREMENT
[/template]

[template public generate(atributo: ForeignKey)]
[atributo.nombre/] [atributo.tipo.getTipo().trim()/] REFERENCES [atributo.referencia_a.nombre/]
[/template]

[template public getTipo(ETipo: EAtributo)]
[if (ETipo = EAtributo::INTEGER)]
INTEGER
[elseif (ETipo = EAtributo::REAL)]
REAL
[elseif (ETipo = EAtributo::TEXT or ETipo = EAtributo::LIST or ETipo = EAtributo::DATE)]
TEXT
[elseif (ETipo = EAtributo::BOOLEAN)]
BOOLEAN
[else]
TEXT
[/if]
[/template]

[comment
	
	GENERACIÓN DEL CÓDIGO HTML: ACTORES	

/]
[template public generate(actor: Actor)]
[file (actor.nombre + '/index.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>[actor.nombre/]</title>
    <link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
<div class="box">
    <h1>Índice - [actor.nombre/]</h1>
    <ul>
		[if (actor.tareas->selectByType(Inicio)->size() > 0)]
            <li><a href="[actor.tareas->selectByType(Inicio).generate().trim()/]">Inicio</a></li>
        [/if]
        [for (tarea: Recepcion | actor.tareas->selectByType(Recepcion))]
            <li><a href="[tarea.generate().trim()/]">Recepción: [tarea.nombre/]</a></li>
        [/for]
        [if (actor.tareas->selectByType(Fin)->size() > 0)]
            <li><a href="[actor.tareas->selectByType(Fin).generate().trim()/]">Finalización</a></li>
        [/if]
    </ul>
</div>
</body>
</html>
[/file]
[/template]

[comment
	
	GENERACIÓN DEL CÓDIGO HTML: TAREAS	

/]
[template public generate(tarea: Inicio)]
inicio.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'inicio.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Inicio</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]" class="center-message"><button type="button">¡Comenzar!</button></a>
</body>
</html>
[/file]
[/template]

[template public generateTarea(tarea: Tarea)]
[if (tarea.oclIsTypeOf(Usuario))]
        [tarea.oclAsType(Usuario).generate()/]
    [elseif (tarea.oclIsTypeOf(Servicio))]
        [tarea.oclAsType(Servicio).generate()/]
    [elseif (tarea.oclIsTypeOf(Envio))]
        [tarea.oclAsType(Envio).generate()/]
    [elseif (tarea.oclIsTypeOf(Recepcion))]
        [tarea.oclAsType(Recepcion).generate()/]
    [elseif (tarea.oclIsTypeOf(Lectura))]
        [tarea.oclAsType(Lectura).generate()/]
    [elseif (tarea.oclIsTypeOf(Borrado))]
        [tarea.oclAsType(Borrado).generate()/]
    [elseif (tarea.oclIsTypeOf(Fin))]
        [tarea.oclAsType(Fin).generate()/]
    [else]
		[tarea.oclAsType(Fin).generate()/]
[/if]
[/template]

[template public generate(tarea: Fin)]
fin.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'fin.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Fin</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
<p class="center-message">¡Proceso finalizado!</p>
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Usuario)]
tareaUsuario.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaUsuario.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tUsuario</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
	
    <form class="box" action="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]" method="POST">
	<fieldset>
		<legend>Rellena los siguientes campos</legend>
		[for (atributo : Atributo | tarea.tabla_accedida.atributos)]
		[if (not(atributo.oclIsTypeOf(PrimaryKey)) and not(atributo.oclIsTypeOf(ForeignKey)))]
        [if (atributo.tipo = EAtributo::LIST)]
        <!-- Generar un select para atributos de tipo LIST -->
		<div>
	        <label for="[atributo.nombre/]">[atributo.nombre/]</label>
	        <div>
	            <select name="[atributo.nombre/]">
                [for (opcion : Opcion | atributo.opciones)]
                    <option value="[opcion.nombre/]">[opcion.nombre/]</option>
                [/for]
	            </select>
	        </div>
	    </div>
	    [else]
        <!-- Generar un input para el resto de atributos -->
		<div>
        [if (atributo.tipo = EAtributo::TEXT)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="text" name="[atributo.nombre/]" required>
			</label>
        [elseif (atributo.tipo = EAtributo::BOOLEAN)]
			<div>
				<label>[atributo.nombre/]<span class="required-mark">*</span></label>
			</div>
			
            <label class="form-option">
                <input type="radio" name="[atributo.nombre/]" value="yes" checked>
                Sí
            </label>
            <label class="form-option">
                <input type="radio" name="[atributo.nombre/]" value="no">
                No
            </label>
        [elseif (atributo.tipo = EAtributo::INTEGER)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="number" name="[atributo.nombre/]" required>
			</label>
        [elseif (atributo.tipo = EAtributo::DATE)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="date" name="[atributo.nombre/]" required>
			</label>            
        [elseif (atributo.tipo = EAtributo::REAL)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="number" step="any" name="[atributo.nombre/]" required>
			</label>
        [/if]
		<div>
        [/if]
		[/if]
		[/for]
		<button type="submit">Siguiente</button>
	</fieldset>
    </form>
</body>
</html>
[/file]
[/template]


[template public generate(tarea: Servicio)]
tareaServicio.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaServicio.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tServicio</title>
	<link rel="stylesheet" href="../../css/styles.css">

	<script>
        function ejecutarServicio() {
            alert("¡Servicio ejecutado!");
        }
    </script>
</head>
<body>
	<div class="box center-message">
		<h1>[tarea.nombre/]</h1>
		<button type="button" onclick="ejecutarServicio()">Ejecutar Servicio</button>
		<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]"><button type="button">Siguiente</button></a>
	</div>
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Envio)]
tareaEnvio.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaEnvio.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tEnvio</title>
	<link rel="stylesheet" href="../../css/styles.css">
	
	<script>
        function ejecutarServicio() {
            alert("¡Mensaje enviado!");
        }
    </script>
</head>
<body>
	<div class="box">
		<p>Nombre: [tarea.nombre/]</p>
		<p>Descripcion: [tarea.descripcion/]</p>
		<p>Accede a la tabla: [tarea.tabla_accedida.nombre/]</p>
	</div>

	<div class="box center-message">
		<h1>[tarea.nombre/]</h1>
		<button type="button" onclick="ejecutarServicio()">Enviar mensaje</button>
		<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/index.html"><button type="button">Índice del receptor</button></a>
	</div>
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Recepcion)]
tareaRecepcion.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaRecepcion.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tRecepcion</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
	<div class="box center-message">
		<h1>[tarea.nombre/]</h1>
		<ul>
			<li><a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]">Pendiente: [tarea.predecesor.oclAsType(Envio).nombre/]</a></li>
			[for (i : Integer | Sequence{1..5})]
			<li><a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]">Pendiente: mensaje [i/]</a></li>
			[/for]
		</ul>
	</div>
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Lectura)]
tareaLectura.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaLectura.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tLectura</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
	<div class="box">
		<h1>[tarea.nombre/]</h1>
		<p>[tarea.descripcion/]</p>
		<form class="box inner" action="consulta.html" method="POST">
			<fieldset>
				<legend>Formulario de consulta</legend>
				<label>
				Indica el campo a leer<span class="required-mark">*</span>
	            <input type="text" name="atributo_seleccionado" required>
				</label>
				<button type="submit">Siguiente</button>
			</fieldset>
		</form>
	</div>
</body>
</html>
[/file]

[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'consulta.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tLConsulta</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
	<div class="box">
		<h1>[tarea.nombre/]</h1>
		<p>[tarea.descripcion/]</p>
		
		<div class="box inner">
			<p>Se ha realizado la siguiente consulta SQL: </p>
			<p>SELECT [tarea.atributo_seleccionado.nombre/] FROM [tarea.datos_a_leer.nombre/];</p>
			<p>Se han leído los siguientes datos: </p>
			<p>[tarea.atributo_seleccionado.nombre/]: mostramos el valor de [tarea.atributo_seleccionado.nombre/]</p>
			<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]"><button type="button">Siguiente</button></a>
		</div>
	</div>
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Borrado)]
tareaBorrado.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaBorrado.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tBorrado</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
	<div class="box">
		<h1>[tarea.nombre/]</h1>
		<p>[tarea.descripcion/]</p>	
		<form class="box inner" action="sentenciaBorrado.html" method="POST">
			<fieldset>
				<legend>Formulario de borrado</legend>
				<label>
				Indica el identificador de la tupla que quieres borrar<span class="required-mark">*</span>
	            <input type="text" name="atributo_seleccionado" required>
				</label>
				<button type="submit">Siguiente</button>
			</fieldset>
		</form>
	</div>
</body>
</html>
[/file]

[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'sentenciaBorrado.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tBSentencia</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
	<div class="box">
		<h1>[tarea.nombre/]</h1>
		<p>[tarea.descripcion/]</p>
		<div class="box inner">
			<p>Se ha realizado la siguiente sentencia SQL: </p>
			<p>DELETE FROM [tarea.atributo_seleccionado.eContainer().oclAsType(Tabla).nombre/] WHERE [tarea.atributo_seleccionado.nombre/] = 'valor de [tarea.atributo_seleccionado.nombre/]';</p>
			<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]"><button type="button">Siguiente</button></a>
		</div>
	</div>
</body>
</html>
[/file]
[/template]
