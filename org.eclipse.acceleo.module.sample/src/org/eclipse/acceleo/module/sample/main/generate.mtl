[comment encoding = UTF-8 /]
[module generate('http://www.example.org/proyectomm')]

[template public generateWorkflow(workflow: ProcesoDeNegocio)]
[comment @main/]
[comment Generación de las bases de datos/]
	[for (database: BaseDeDatos | workflow.bases_de_datos)]
		[database.generate()/]
	[/for]
[comment Generación de los actores/]
	[for (actor: Actor | workflow.actores)]
		[actor.generate()/]
	[/for]
[/template]

[comment
	
	GENERACIÓN DEL CÓDIGO SQL: BASES DE DATOS	

/]
[template public generate(database: BaseDeDatos)]
[file ('/database/' + database.nombre + '.sql', false, 'UTF-8')]

-- Creación de la base de datos
CREATE DATABASE IF NOT EXISTS [database.nombre/];

-- Cambio al contexto de la base de datos
USE [database.nombre/];

-- Creación de tablas
[for (tabla: Tabla | database.tablas)]
[tabla.generate()/]
[/for]

[/file]
[/template]

[template public generate(table: Tabla)]
-- Definición de la tabla [table.nombre/]
CREATE TABLE IF NOT EXISTS [table.nombre/] (
[for (atributo : Atributo | table.atributos)]
	[comment 
		No se usa separator porque se añade sí o sí un salto de línea y en esa línea en donde se pone el separator. 
		Por ejemplo: 
		dni TEXT
		, nombre TEXT
		Además, se emplea trim() para eliminar los espacios en blanco finales e iniciales de forma que quede en una sola línea: 
		dni TEXT, 
		nombre TEXT
	/]
	[atributo.generate().trim()/][if (not(atributo = table.atributos->last()))], [/if]
[/for]
);

[/template]

[template public generate(atributo: Atributo)]
[atributo.nombre/] [atributo.tipo.getTipo().trim()/]
[/template]

[template public generate(atributo: PrimaryKey)]
[atributo.nombre/] [atributo.tipo.getTipo().trim()/] PRIMARY KEY AUTOINCREMENT
[/template]

[template public generate(atributo: ForeignKey)]
[atributo.nombre/] [atributo.tipo.getTipo().trim()/] REFERENCES [atributo.referencia_a.nombre/]
[/template]

[template public getTipo(ETipo: EAtributo)]
[if (ETipo = EAtributo::INTEGER)]
INTEGER
[elseif (ETipo = EAtributo::REAL)]
REAL
[elseif (ETipo = EAtributo::TEXT or ETipo = EAtributo::LIST or ETipo = EAtributo::DATE)]
TEXT
[elseif (ETipo = EAtributo::BOOLEAN)]
BOOLEAN
[else]
TEXT
[/if]
[/template]

[comment
	
	GENERACIÓN DEL CÓDIGO HTML: ACTORES	

/]
[template public generate(actor: Actor)]
[file (actor.nombre + '/index.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>[actor.nombre/]</title>
    <link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

[generateHeader()/]

<div class="box">
    <h1>Índice - [actor.nombre/]</h1>
	<h2>Tareas</h2>
    <ul>
		[if (actor.tareas->selectByType(Inicio)->size() > 0)]
            <li><a href="[actor.tareas->selectByType(Inicio).generate().trim()/]">Inicio</a></li>
        [/if]
		[if (actor.tareas->selectByType(Inicio)->size() <= 0)]
            <p>No hay tareas definidas</p>
        [/if]
	</ul>
	[if (actor.tareas->selectByType(Recepcion)->size() > 0)]
	    <h2>Mensajes Recibidos</h2>
		<ul>
	        [for (tarea: Recepcion | actor.tareas->selectByType(Recepcion))]
	            <li><a href="[tarea.generate().trim()/]">Recepción: [tarea.nombre/]</a></li>
	        [/for]
	    </ul>
    [/if]
</div>

[generateFooter()/]
</body>
</html>
[/file]
[/template]

[comment
	
	GENERACIÓN DEL CÓDIGO HTML: TAREAS	

/]

[template public generate(tarea: Inicio)]
inicio.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'inicio.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Inicio</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

[generateHeader()/]

	

<div class ="box">
	<h1> Tarea inicial de [tarea.eContainer().oclAsType(Actor).nombre/]: [tarea.nombre/]</h1>

	<br>
	<p>Pulse para iniciar su workflow: </p> 

	<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]" class="center-message"><button type="button">¡Comenzar!</button></a>
</div>


[generateFooter()/]

</body>
</html>
[/file]
[/template]

[template public generateTarea(tarea: Tarea)]
[if (tarea.oclIsTypeOf(Usuario))]
        [tarea.oclAsType(Usuario).generate()/]
    [elseif (tarea.oclIsTypeOf(Servicio))]
        [tarea.oclAsType(Servicio).generate()/]
    [elseif (tarea.oclIsTypeOf(Envio))]
        [tarea.oclAsType(Envio).generate()/]
    [elseif (tarea.oclIsTypeOf(Recepcion))]
        [tarea.oclAsType(Recepcion).generate()/]
    [elseif (tarea.oclIsTypeOf(Lectura))]
        [tarea.oclAsType(Lectura).generate()/]
    [elseif (tarea.oclIsTypeOf(Borrado))]
        [tarea.oclAsType(Borrado).generate()/]
    [elseif (tarea.oclIsTypeOf(Fin))]
        [tarea.oclAsType(Fin).generate()/]
    [else]
		[tarea.oclAsType(Fin).generate()/]
[/if]
[/template]

[template public generate(tarea: Fin)]
fin.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'fin.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Fin</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

[generateHeader()/]

<div class="box">
	<h1>Tarea de cierre de [tarea.eContainer().oclAsType(Actor).nombre/]</h1>
	<br>

	<p class="center-message">¡Proceso finalizado!</p>
	<p class="center-message"><a style="text-align: center" href="index.html">Volver al índice de [tarea.eContainer().oclAsType(Actor).nombre/]</a></p>
</div>

[generateFooter()/]

</body>
</html>
[/file]
[/template]

[template public generate(tarea: Usuario)]
tareaUsuario.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaUsuario.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tUsuario</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

	[generateHeader()/]
	
    <form class="box" action="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]" method="POST">

	<h1>Tarea de Usuario de: [tarea.eContainer().oclAsType(Actor).nombre/]</h1>

	<fieldset>
		<legend>Rellena los siguientes campos</legend>
		[for (atributo : Atributo | tarea.tabla_accedida.atributos)]
		[if (not(atributo.oclIsTypeOf(PrimaryKey)) and not(atributo.oclIsTypeOf(ForeignKey)))]
        [if (atributo.tipo = EAtributo::LIST)]
        <!-- Generar un select para atributos de tipo LIST -->
		<div>
	        <label for="[atributo.nombre/]">[atributo.nombre/]</label>
	        <div>
	            <select name="[atributo.nombre/]">
                [for (opcion : Opcion | atributo.opciones)]
                    <option value="[opcion.nombre/]">[opcion.nombre/]</option>
                [/for]
	            </select>
	        </div>
	    </div>
	    [else]
        <!-- Generar un input para el resto de atributos -->
		<div>
        [if (atributo.tipo = EAtributo::TEXT)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="text" name="[atributo.nombre/]" required>
			</label>
        [elseif (atributo.tipo = EAtributo::BOOLEAN)]
			<div>
				<label>[atributo.nombre/]<span class="required-mark">*</span></label>
			</div>
			
            <label class="form-option">
                <input type="radio" name="[atributo.nombre/]" value="yes" checked>
                Sí
            </label>
            <label class="form-option">
                <input type="radio" name="[atributo.nombre/]" value="no">
                No
            </label>
        [elseif (atributo.tipo = EAtributo::INTEGER)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="number" name="[atributo.nombre/]" required>
			</label>
        [elseif (atributo.tipo = EAtributo::DATE)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="date" name="[atributo.nombre/]" required>
			</label>            
        [elseif (atributo.tipo = EAtributo::REAL)]
			<label>
			[atributo.nombre/]<span class="required-mark">*</span>
            <input type="number" step="any" name="[atributo.nombre/]" required>
			</label>
        [/if]
		<div>
        [/if]
		[/if]
		[/for]
		<button type="submit">Siguiente</button>
	</fieldset>
    </form>

	[generateFooter()/]

</body>
</html>
[/file]
[/template]


[template public generate(tarea: Servicio)]
tareaServicio.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaServicio.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tServicio</title>
	<link rel="stylesheet" href="../../css/styles.css">

	<script>
        function ejecutarServicio() {
            alert("¡Servicio ejecutado!");
        }
    </script>
</head>
<body>

	[generateHeader()/]

	<div class="box">

		<h1>Tarea de servicio: [tarea.nombre/]</h1>

		<div class="box">
			<h2>Información del servicio</h2>
			<p>Id: [tarea.id/]</p>
			<p>Nombre: [tarea.nombre/]</p>
			<p>Descripción: [tarea.descripcion/]</p>
			<p></p>
		</div>

		<div class="box">
			<h2>Datos accedidos</h2>
			<p>Tabla: [tarea.tabla_accedida.nombre/]</p>
			<ul>
				[for (atributo: Atributo | tarea.tabla_accedida.atributos)]
		            <li>Nombre: [atributo.nombre/] &emsp; Tipo: [atributo.tipo/]</li>
		        [/for]
			</ul>
		</div>

		<div class="box">
			<h2>Acciones a tomar</h2>
			<button type="button" onclick="ejecutarServicio()">Ejecutar Servicio</button>
			<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]"><button type="button">Siguiente</button></a>
		</div>
	</div>

	[generateFooter()/]
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Envio)]
tareaEnvio.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaEnvio.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tEnvio</title>
	<link rel="stylesheet" href="../../css/styles.css">
	
	<script>
        function ejecutarServicio() {
            alert("¡Mensaje enviado!");
        }
    </script>
</head>
<body>

	[generateHeader()/]	

	<div class="box">
	<h1>Tarea de Envio de: [tarea.eContainer().oclAsType(Actor).nombre/]</h1>

	<div class="box">
		<p>Nombre de Tarea: [tarea.nombre/]</p>
		<p>Descripcion: [tarea.descripcion/]</p>

		<div class="box">
			<h2>Tabla a enviar</h2>
			<p>Tabla: [tarea.tabla_accedida.nombre/]</p>
			<ul>
				[for (atributo: Atributo | tarea.tabla_accedida.atributos)]
		            <li>Nombre: [atributo.nombre/] &emsp; Tipo: [atributo.tipo/]</li>
		        [/for]
			</ul>
		</div>

		</br>
		<div>
			<h2>Acciones a tomar:</h2>
			Pulse para realizar el envio: <a href="../[tarea.eContainer().oclAsType(Actor).nombre/]/index.html"><button type="button">Continuar</button></a>
		</div>
	</div>

	</div>

	[generateFooter()/]
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Recepcion)]
tareaRecepcion.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaRecepcion.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tRecepcion</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

	[generateHeader()/]

	<div class="box">
		<h1>Tarea de Recepción de: [tarea.eContainer().oclAsType(Actor).nombre/]</h1>

		<p>Nombre de Tarea: [tarea.nombre/]</p>
		<p>Descripcion: [tarea.descripcion/]</p>

		<div class="box">
			<h2>Tabla Recibida</h2>
			<p>Nombre: [tarea.tabla_accedida.nombre/]</p>
			<ul>
				[for (atributo: Atributo | tarea.tabla_accedida.atributos)]
		            <li>Nombre: [atributo.nombre/] &emsp; Tipo: [atributo.tipo/]</li>
		        [/for]
			</ul>
		</div>

		<div class="box">
			Se está procesando la tabla [tarea.tabla_accedida.nombre/]. Puedes continuar cuando quieras. 
			<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]"><button type="button">Continuar</button></a>
		</div>

	</div>

	[generateFooter()/]
</body>
</html>
[/file]
[/template]

[template public generate(tarea: Lectura)]
tareaLectura.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaLectura.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tLectura</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

	[generateHeader()/]

	<div class="box">
		<h1>Tarea de Lectura de: [tarea.eContainer().oclAsType(Actor).nombre/]</h1>

		<div class="box">
			<h2>Datos Leidos</h2>
			<p>Nombre: [tarea.atributo_seleccionado.eContainer().oclAsType(Tabla).nombre/]</p>
			<ul>
				[for (atributo: Atributo | tarea.atributo_seleccionado.eContainer().oclAsType(Tabla).atributos)]
		            <li>Nombre: [atributo.nombre/] &emsp; Tipo: [atributo.tipo/]</li>
		        [/for]
			</ul>
		</div>

		<div class="box">
			<h2>[tarea.nombre/]</h2>
			<p>[tarea.descripcion/]</p>
			<form class="box inner" action="consulta.html" method="POST">
				<fieldset>
					<legend>Formulario de consulta</legend>
					<label>
					[tarea.atributo_seleccionado.nombre/]<span class="required-mark">*</span>
		            <input type="text" required>
					</label>
					<button type="submit">Siguiente</button>
				</fieldset>
			</form>
		</div>

	</div>

	[generateFooter()/]

</body>
</html>
[/file]

[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'consulta.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tLConsulta</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

	[generateHeader()/]

	<div class="box">
		<h1>Tarea de Consulta de: [tarea.eContainer().oclAsType(Actor).nombre/]</h1>

		<div class="box">
			<h2>[tarea.nombre/]</h2>
			<p>[tarea.descripcion/]</p>
			
			<div class="box inner">
				<p>Se ha realizado la siguiente consulta SQL</p>
				<div class="box"><em>SELECT [tarea.atributo_seleccionado.nombre/] FROM [tarea.atributo_seleccionado.eContainer().oclAsType(Tabla).nombre/];</em></div>
				<p>Se ha leído la siguiente información</p>
				<div class="box">
				<table>
				  <thead>
				    <tr>
				      <th>[tarea.atributo_seleccionado.nombre/]</th>
				    </tr>
				  </thead>
				  <tbody>
					[for (i : Integer | Sequence{1..5})]
				    <tr>
				      <td><em>Aquí iría el valor del atributo para esta tupla</em></td>
				    </tr>
					[/for]
				  </tbody>
				</table>
				</div>
				<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]"><button type="button">Siguiente</button></a>
			</div>
		</div>

	</div>

	[generateFooter()/]

</body>
</html>
[/file]
[/template]

[template public generate(tarea: Borrado)]
tareaBorrado.html
[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'tareaBorrado.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tBorrado</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>

	[generateHeader()/]

	<div class="box">
		<h1>Tarea de borrado de: [tarea.eContainer().oclAsType(Actor).nombre/]</h1>

		<div class="box">
			<h2>[tarea.nombre/]</h2>
			<p>[tarea.descripcion/]</p>	
			<form class="box inner" action="sentenciaBorrado.html" method="POST">
				<fieldset>
					<legend>Formulario de borrado</legend>
					<label>
					[tarea.atributo_seleccionado.nombre/]<span class="required-mark">*</span>
		            <input type="text" name="atributo_seleccionado" required>
					</label>
					<button type="submit">Siguiente</button>
				</fieldset>
			</form>
		</div>

	</div>

	[generateFooter()/]

</body>
</html>
[/file]

[file ('/' + tarea.eContainer().oclAsType(Actor).nombre + '/' + 'sentenciaBorrado.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>tBSentencia</title>
	<link rel="stylesheet" href="../../css/styles.css">
</head>
<body>
	
	[generateHeader()/]

	<div class="box">
		<h1>Sentencia de borrado de: [tarea.eContainer().oclAsType(Actor).nombre/]</h1>

	<div class="box">
		<h2>[tarea.nombre/]</h2>
		<p>[tarea.descripcion/]</p>
		<div class="box inner">
			<p>Se ha realizado la siguiente sentencia SQL</p>
			<div class="box"><em>DELETE FROM [tarea.atributo_seleccionado.eContainer().oclAsType(Tabla).nombre/] WHERE [tarea.atributo_seleccionado.nombre/] = 'valor de [tarea.atributo_seleccionado.nombre/]';</em></div>
			<a href="../[tarea.sucesor.eContainer().oclAsType(Actor).nombre/]/[tarea.sucesor.generateTarea().trim()/]"><button type="button">Siguiente</button></a>
		</div>
	</div>

	</div>

	[generateFooter()/]

</body>
</html>
[/file]
[/template]

[template public generateHeader()]
	<header class="topnav">
        <h1><a href="index.html">MisWorkflows</a></h1>
    </header>
[/template]

[template public generateFooter()]
	<footer class="bottomnav">
        <p>&copy; 2024 MisWorkflows. Todos los derechos reservados.</p>
		<p>Jackie Lee Chong Ojeda & Sergio Eslava Velasco</p>
    </footer>
[/template]


